from google.colab import files
uploaded = files.upload()
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import RepeatedKFold
from sklearn.preprocessing import PolynomialFeatures, StandardScaler
from sklearn.neighbors import KNeighborsRegressor
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Загрузка данных
file_path = '/content/Salary_Data.csv'
data = pd.read_csv(file_path)

# Обработка пропущенных значений: удаление строк с пропущенными значениями
data = data.dropna()

# Обработка пропущенных значений с помощью заполнения средними значениями (только для числовых столбцов)
data.fillna(data.select_dtypes(include=np.number).mean(), inplace=True)

# Преобразование категориальных переменных с помощью One-Hot Encoding
data = pd.get_dummies(data, drop_first=True)

# Разделение на признаки (X) и целевую переменную (y)
X = data.drop('Salary', axis=1)
y = data['Salary']

# Создание моделей
models = {
    'Polynomial Regression (degree=2)': Pipeline([
        ('poly', PolynomialFeatures(degree=2)),
        ('scaler', StandardScaler()),
        ('regressor', LinearRegression())
    ]),
    'k-NN Regression': Pipeline([
        ('scaler', StandardScaler()),
        ('regressor', KNeighborsRegressor())
    ])
}

# Конфигурация кросс-валидации
cv = RepeatedKFold(n_splits=5, n_repeats=3, random_state=42)

# Обучение и оценка моделей
results = {}
for name, model in models.items():
    mse_scores = []
    for train_index, test_index in cv.split(X):
        X_train, X_test = X.iloc[train_index], X.iloc[test_index]
        y_train, y_test = y.iloc[train_index], y.iloc[test_index]

        model.fit(X_train, y_train)
        y_pred = model.predict(X_test)

        mse = mean_squared_error(y_test, y_pred)
        mse_scores.append(mse)
    results[name] = mse_scores

# Визуализация результатов
plt.figure(figsize=(10, 6))
for name, mse_scores in results.items():
    plt.plot(range(1, len(mse_scores) + 1), mse_scores, marker='o', linestyle='-', label=name)
plt.xlabel('Fold', fontsize=14)
plt.ylabel('Mean Squared Error', fontsize=14)
plt.title('Comparison of Regression Models', fontsize=16)
plt.legend()
plt.show()
